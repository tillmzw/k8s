apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: argocd
  namespace: argocd
  finalizers:
  - resources-finalizer.argocd.argoproj.io

spec:
  project: infrastructure
  sources:
  - repoURL: https://github.com/tillmzw/k8s.git
    targetRevision: master
    ref: repo
    helm:
      releaseName: argo-cd
  - repoURL: https://argoproj.github.io/argo-helm
    chart: argo-cd
    targetRevision: "7.6.8"
    helm:
      valueFiles:
      - $repo/gitops/argo-values.yaml
  destination:
    server: https://kubernetes.default.svc
    namespace: argocd
  syncPolicy:
    automated:
      selfHeal: true
    syncOptions:
      - CreateNamespace=true
      - PruneLast=true

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: argocd-server-http-ingress
  namespace: argocd
  annotations:
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    nginx.ingress.kubernetes.io/backend-protocol: "HTTP"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
spec:
  rules:
  - host: argo.512.ch
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: argocd-server
            port:
              name: http
  tls:
  - hosts:
    - argo.512.ch
    secretName: argocd-secret # do not change, this is provided by Argo CD
# --- no need for GRPC for now
# apiVersion: networking.k8s.io/v1
# kind: Ingress
# metadata:
#   name: argocd-server-grpc-ingress
#   namespace: argocd
#   annotations:
#     cert-manager.io/cluster-issuer: "letsencrypt-prod"
#     nginx.ingress.kubernetes.io/backend-protocol: "GRPC"
# spec:
#   rules:
#   - host: grpc.argo.512.ch
#     http:
#       paths:
#       - path: /
#         pathType: Prefix
#         backend:
#           service:
#             name: argocd-server
#             port:
#               name: https
#   tls:
#   - hosts:
#     - grpc.argo.512.ch
#     secretName: argocd-secret # do not change, this is provided by Argo CD